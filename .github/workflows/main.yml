name: Automated Test, Build, Terraform Apply and Deploy for BookLah
on:
  workflow_dispatch:
  push:
    branches:
      - main # Workflow will be triggered whenever there is a push in main branch
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code from GitHub Repo
      uses: actions/checkout@v3
      
    - name: Setup Node.js in Ubuntu
      uses: actions/setup-node@v3
      with:
        node-version: 18
        
    - name: Remove existing node_modules folder from cloned project
      run: rm -rf /home/runner/work/BookLah-Jivaka/BookLah-Jivaka/node_modules/*
      
    - name: Install dependencies for based on package.json
      run: npm install
      
    - name: Run tests in "tests" folder
      run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code from GitHub Repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker-compose build

      - name: Push Docker image to Docker Hub
        run: docker-compose push

  terraform:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code from GitHub Repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Initialize Terraform
        run: cd bl-terraform && terraform init

      - name: Plan Terraform changes
        run: cd bl-terraform && terraform plan

      - name: Destroy existing Terraform resources
        run: cd bl-terraform && terraform destroy -auto-approve

      - name: Apply Terraform changes
        run: cd bl-terraform && terraform apply -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: [build, terraform]
    steps:
      - name: Checkout code from GitHub Repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Set up Azure Kubernetes CLI
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: dvopsAKSCluster
          resource-group: dvopsResourceGroup
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Deploy to AKS
        run: |
          kubectl apply -f bl-deployment.yaml
          kubectl apply -f bl-service.yaml
          kubectl rollout history deployment/bl-deployment
          kubectl get pods
          kubectl get services
